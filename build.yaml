schedules:
  commit:
    schedule: per_commit
    branches:
      include: [master, /python.*/]
    env_vars: |
      EVENT_LOOP_MANAGER='libev'
    matrix:
      exclude:
        - python: [3.4, 3.6]

  nightly_libev:
    schedule: nightly
    branches:
      include: [master]
    env_vars: |
      EVENT_LOOP_MANAGER='libev'

  nightly_gevent:
    schedule: nightly
    branches:
      include: [master]
    env_vars: |
      EVENT_LOOP_MANAGER='gevent'
    matrix:
      exclude:
        - python: [3.4, 3.6]

  nightly_eventlet:
    schedule: nightly
    branches:
      include: [master]
    env_vars: |
      EVENT_LOOP_MANAGER='eventlet'

  nightly_async:
    schedule: nightly
    branches:
      include: [master]
    env_vars: |
      EVENT_LOOP_MANAGER='async'

  nightly_twister:
    schedule: nightly
    branches:
      include: [master]
    env_vars: |
      EVENT_LOOP_MANAGER='twisted'

python:
  - 2.7
  - 3.4
  - 3.5
  - 3.6

os:
  - ubuntu/trusty64
cassandra:
  - 'dse-4.8'
  - 'dse-5.0'
  - 'dse-5.1'
env:
  EVENT_LOOP_MANAGER:
    - libev
  CYTHON:
    - CYTHON
    - NO_CYTHON
build:
  - script: |
      export JAVA_HOME=$CCM_JAVA_HOME
      export PATH=$JAVA_HOME/bin:$PATH

      sudo python /home/jenkins/ccm/setup.py install
      # Install dependencies
      if [[ $EVENT_LOOP_MANAGER == 'libev' ]]; then
        sudo apt-get install -y libev4 libev-dev
      fi
      echo "Installing test-requirements.txt"
      pip install -r test-requirements.txt
      pip install nose-ignore-docstring
      FORCE_CYTHON=False
      if [[ $CYTHON == 'CYTHON' ]]; then
        FORCE_CYTHON=True
        pip install cython
        pip install numpy
        # Install the driver & compile C extensions
        python setup.py build_ext --inplace
      else
        # Install the driver & compile C extensions with no cython
        python setup.py build_ext --inplace --no-cython
      fi

      echo "==========RUNNING UNIT TESTS==============="
      CASSANDRA_DIR=$CCM_INSTALL_DIR DSE_VERSION=$CCM_VERSION nosetests -s -v --logging-format="[%(levelname)s] %(asctime)s %(thread)d: %(message)s" --with-ignore-docstrings --with-xunit --xunit-file=unit_results.xml tests/unit/ || true

      echo "==========RUNNING CQLENGINE TESTS=========="
      CASSANDRA_DIR=$CCM_INSTALL_DIR DSE_VERSION=$CCM_CASSANDRA_VERSION nosetests -s -v --logging-format="[%(levelname)s] %(asctime)s %(thread)d: %(message)s" --with-ignore-docstrings --with-xunit --xunit-file=cqle_results.xml tests/integration/cqlengine/ || true

      echo "==========RUNNING STANDARD INTEGRATION TESTS=========="
      CASSANDRA_DIR=$CCM_INSTALL_DIR DSE_VERSION=$CCM_CASSANDRA_VERSION VERIFY_CYTHON=$FORCE_CYTHON nosetests -s -v --logging-format="[%(levelname)s] %(asctime)s %(thread)d: %(message)s" --with-ignore-docstrings --with-xunit --xunit-file=standard_results.xml tests/integration/standard/ || true

      if ! [[ $CCM_VERSION == *"4.8"* ]]; then
        echo "==========RUNNING DSE INTEGRATION TESTS=========="
        CASSANDRA_DIR=$CCM_INSTALL_DIR DSE_VERSION=$CCM_VERSION ADS_HOME=$HOME/ nosetests -s -v --logging-format="[%(levelname)s] %(asctime)s %(thread)d: %(message)s" --with-ignore-docstrings --with-xunit --xunit-file=dse_results.xml tests/integration/advanced/ || true
      fi
      
      echo "==========RUNNING LONG INTEGRATION TESTS=========="
      CASSANDRA_DIR=$CCM_INSTALL_DIR DSE_VERSION=$CCM_CASSANDRA_VERSION nosetests -s -v --logging-format="[%(levelname)s] %(asctime)s %(thread)d: %(message)s" --with-ignore-docstrings --with-xunit --xunit-file=long_results.xml tests/integration/long/ || true

  - xunit:
    - "*_results.xml"



